@model Orders.com.Web.MVC.ViewModels.OrderViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Order</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <label class="control-label col-md-1">Order ID</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ID)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-1" for="CustomerID">Customer</label>
            <div class="col-md-10">
                @if (!Model.HasShippedItems.GetValueOrDefault())
                {
                    @Html.DropDownListFor(model => model.CustomerID, new SelectList(Model.Customers, "CustomerID", "Name", Model.AssociatedCustomer), "-- select one --", new { @class = "form-control", onchange = "this.form.submit()" })
                    @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DisplayFor(model => model.AssociatedCustomer.Name)
                }
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-1">Total</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Total)
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Add Item", "Create", "OrderItems", new { orderID = @Model.ID }, new { @class = "col-md-3" })
        </div>

    </div>
}

<table class="table">
    <tr>
        <th></th>
        <th>Product</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Amount</th>
        <th>Status</th>
        <th>Submitted On</th>
        <th>Shipped On</th>
        <th></th>
    </tr>

    @foreach (var item in Model.OrderItems)
    {
        <tr>
            <td>
                @if (item.CanShip)
                {
                    using (Html.BeginForm("ship", "orderitems"))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" value="@item.ID" name="ID" />
                        <input type="hidden" value="@item.OrderID" name="OrderID" />
                        <input type="submit" value="Ship" class="btn btn-default" />
                    }
                }
            </td>
            <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
            <td>@Html.DisplayFor(modelItem => item.Price)</td>
            <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
            <td>@Html.DisplayFor(modelItem => item.Amount)</td>
            <td>@Html.DisplayFor(modelItem => item.Status)</td>
            <td>@Html.DisplayFor(modelItem => item.SubmittedOn)</td>
            <td>@Html.DisplayFor(modelItem => item.ShippedOn)</td>
            <td>
                @if (item.CanDelete)
                {
                    @Html.ActionLink("Edit", "Edit", "OrderItems", new { id = item.ID }, null)
                    <text>|</text>
                    @Html.ActionLink("Delete", "Delete", "OrderItems", new { id = item.ID }, null)
                }
            </td>
        </tr>
    }

</table>

<div class="form-actions no-color">
    @if (Model.HasUnsubmittedItems.GetValueOrDefault())
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)
            <input type="submit" value="Submit Order" class="btn btn-default" formaction="@Url.Action("Submit")" />
            <text>|</text>
            @Html.ActionLink("Back to List", "Index")
        }
    }
    else
    {
        @Html.ActionLink("Back to List", "Index")
    }
</div>
